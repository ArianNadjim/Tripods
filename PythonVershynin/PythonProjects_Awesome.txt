TRIPODS: Aug 10 through 21

Philosphy behind the program: Taking a serious book (Vershynin) and teach the mathematics behind data science. Get into a habit of coding mathematical ideas that they learn.

I'll be taking point on remediating Python knowledge. Maybe I should flesh out the elementary python folder.

Theorem 0.0.2 in Vershynin's book. Let's try it for finite sets in low dimensions, such as 1. Investigate via Python code? (Me, Ian, Arian) Think through projects that could grow out of this.

Find projects in the Chapter 0 Exercises and Theorems.

------------------------------------------

07-08-2020: Meeting with Arian and Ian

Grand Scheme for a given problem:
1) Solve with pen and paper, and get the computer to agree
2) Solve with computer what you *could* do with pen and paper that would take a while
3) Solve with neural net and computer what you could NOT do with pen and paper.

Possible Theorem 0.0.2 projects:
- Arian has python code that generates the convex hull of a randomly generated point set in two dimensions.
- Have them write code to explore the 1 dimensional problem
- Hypercube vertices in higher dimensions
- Compute the fluctuation of the error with repeated applications. Bell curve?
- relationship to Nash equilibria? application.

Possible Corollary 0.0.4 projects:
- python code to cover an interval with subintervals (opportunity for neural net optimization for point picking strategies)
- python code to cover a polygon with balls
- neural net code to distribute points on a sphere
- cover with balls that are radial basis functions instead of characteristics

Chapter 1 ideas:
- python code to simulate Theorems 1.3.1 and 1.3.2.

Chapter 2 ideas:
- visualizations for the concentration inequalities.
- guess the average degree of a graph by looking for autocorrelation in long random walks.
- random walks on a weighted graph, sampling the weights to determine some property.

Deliverables for next meeting:
Arian: writing up hypercube and polytope exercises in python
Steven: Implementing something in tensorflow and maybe the random walks?
Ian:

------------

07-12-2020: Big group meeting

Azita and Mandar joined our group:-)

second group: Xiaobo, Bai, Charlotte, Yujia, Sevak, Ustun,

Steve: flesh out the elementary python section. Ask Alex if Steve needs help.

General question (for everyone): Is Theorem 0.0.2 sharp?

General point: One big idea is to implement simplified versions of theoretical results in python. However, we need to do regular checks to make sure that these are not too simplified, so as to be disingenuous.

Student acceptance: We appear to have 10 python instructors.
15 students for TRIPODS. Shoot for 2 instructors for every 5 students, for a total of 6 instructors.
20 students for GRADSTEMFORALL. Shoot for 1 instructor for every 5 students, for a total of 4 other instructors.
python sessions will probably run between 60 and 120 minutes.

Email Alex privately if anyone (except Arian or Mandar) wants to give any particular lectures.

General meeting: Tuesday 9pm (EST)





